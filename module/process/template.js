define(["handlebars"],function(e){var t=function(e,t,n,r,i){function l(e,t){var r="";return r+="\n					"+u(n.i18n.call(e,"PROC_FAILED_TITLE",{hash:{},data:t}))+"\n				",r}function c(e,t){var r="";return r+="\n					"+u(n.i18n.call(e,"PROC_TITLE",{hash:{},data:t}))+"\n				",r}function h(e,t){var r="";return r+='\n		<div class="result-success">\n			<p class="result-title">'+u(n.i18n.call(e,"PROC_RLT_DONE_TITLE",{hash:{},data:t}))+'</p>\n			<p class="result-sub-title">'+u(n.i18n.call(e,"PROC_RLT_DONE_SUB_TITLE",{hash:{},data:t}))+"</p>\n		</div>\n		",r}function p(e,t){var r="";return r+='\n		<div class="loading-spinner"></div>\n		<!-- <div class="step-prepare clearfix">\n			<h2>'+u(n.i18n.call(e,"PROC_STEP_PREPARE",{hash:{},data:t}))+'</h2><div class="loading-spinner"></div>\n		</div> -->\n		',r}function d(e,t){var r="",i;r+='\n		<div class="result-fail error-info-block">\n			<!-- <p class="result-title">'+u(n.i18n.call(e,"PROC_RLT_FAILED_TITLE",{hash:{},data:t}))+'</p> -->\n			<p class="result-sub-title">'+u(n.i18n.call(e,"PROC_RLT_FAILED_SUB_TITLE",{hash:{},data:t}))+'</p>\n			<div class="result-error-info">\n				<p class="title">'+u(n.i18n.call(e,"PROC_ERR_INFO",{hash:{},data:t}))+'</p>\n				<p class="detail">',i=(i=(i=e&&e.flag_list,i==null||i===!1?i:i.err_detail),typeof i===a?i.apply(e):i);if(i||i===0)r+=i;return r+='</p>\n			</div>\n			<div class="action">\n				<button class="btn btn-silver btn-close-process">'+u(n.i18n.call(e,"PROC_CLOSE_TAB",{hash:{},data:t}))+"</button>\n			</div>\n		</div>\n		",r}function v(e,t){var r="",i;return r+='\n		<div class="step-request">\n			<!-- <h2>'+u(n.i18n.call(e,"PROC_STEP_REQUEST",{hash:{},data:t}))+'</h2> -->\n			<div class="progress">\n				<div class="bar" id="progress_bar" style="width: '+u((i=(i=e&&e.flag_list,i==null||i===!1?i:i.rate),typeof i===a?i.apply(e):i))+'%;"></div>\n			</div>\n			<p class="process-info">\n				<span><b class="num" id="progress_num">'+u((i=(i=e&&e.flag_list,i==null||i===!1?i:i.dones),typeof i===a?i.apply(e):i))+'</b> of</span>\n				<span><b class="total" id="progress_total">'+u((i=(i=e&&e.flag_list,i==null||i===!1?i:i.steps),typeof i===a?i.apply(e):i))+"</b> tasks</span>\n			</p>\n		</div>\n		",r}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),i=i||{};var s="",o,u=this.escapeExpression,a="function",f=this;s+='<div id="process-panel">\n	<section id="process-container">\n		<header id="process-title" class="overlay-text">\n				',o=n["if"].call(t,(o=t&&t.flag_list,o==null||o===!1?o:o.is_failed),{hash:{},inverse:f.program(3,c,i),fn:f.program(1,l,i),data:i});if(o||o===0)s+=o;s+='\n		</header>\n		<div id="process-body">\n\n		',o=n["if"].call(t,(o=t&&t.flag_list,o==null||o===!1?o:o.is_done),{hash:{},inverse:f.noop,fn:f.program(5,h,i),data:i});if(o||o===0)s+=o;s+="\n\n		",o=n["if"].call(t,(o=t&&t.flag_list,o==null||o===!1?o:o.is_pending),{hash:{},inverse:f.noop,fn:f.program(7,p,i),data:i});if(o||o===0)s+=o;s+="\n\n		",o=n["if"].call(t,(o=t&&t.flag_list,o==null||o===!1?o:o.is_failed),{hash:{},inverse:f.noop,fn:f.program(9,d,i),data:i});if(o||o===0)s+=o;s+="\n\n		",o=n["if"].call(t,(o=t&&t.flag_list,o==null||o===!1?o:o.is_inprocess),{hash:{},inverse:f.noop,fn:f.program(11,v,i),data:i});if(o||o===0)s+=o;return s+="\n\n		</div>\n	</section>\n</div>\n",s};return e.template(t)});
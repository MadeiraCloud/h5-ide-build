(function(){define(["constant","MC"],function(e,t){var n,r;return n=function(e,n){var r;return r=!0,_.each(n,function(n){if(t.aws.subnet.isSubnetConflict(e,n))return r=!1}),r},r=function(){var n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x;p={},h=[],a=null,w=t.canvas_data.component;for(v in w)r=w[v],r.type===e.AWS_RESOURCE_TYPE.AWS_VPC_Subnet?p[v]=!1:r.type===e.AWS_RESOURCE_TYPE.AWS_VPC_RouteTable&&(h.push(r),r.resource.AssociationSet.length&&""+r.resource.AssociationSet[0].Main=="true"&&(a=v));for(m=0,y=h.length;m<y;m++){c=h[m],E=c.resource.AssociationSet;for(g=0,b=E.length;g<b;g++){n=E[g];if(""+n.Main=="true")continue;p[t.extractID(n.SubnetId)]=c.uid}}s={},S=t.canvas_data.layout.connection;for(v in S){i=S[v];if(i.type!=="association")continue;l={},x=i.target;for(u in x)f=x[u],l[f]=u;l["subnet-assoc-out"]&&l["rtb-src"]&&(s[l["subnet-assoc-out"]]=v)}for(v in p){d=p[v],d||(d=a),o=t.canvas_data.layout.connection[s[v]];if(o){if(o.target[v]&&o.target[d])continue;t.canvas.remove(document.getElementById(s[v]))}t.canvas.connect(v,"subnet-assoc-out",d,"rtb-src")}return null},{isNotCIDRConflict:n,updateRT_SubnetLines:r}})}).call(this);
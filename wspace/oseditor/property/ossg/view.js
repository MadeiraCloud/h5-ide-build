define(["constant","../OsPropertyView","./template","CloudResources","UI.selection","UI.bubblepopup","../validation/ValidationBase"],function(e,t,n,r,i,s,o){return t.extend({events:{"change .selection[data-target]":"updateAttribute","click .direction-switch .t-m-btn":"switchDirection","click .rule-item-remove":"removeRule","click .os-sg-remove":"removeSG","focus .os-sg-new-input":"focusNewInput"},className:"float-panel-sg",initialize:function(e){var t;t=this,t.sgModel=e.sgModel,t.listView=e.listView,this.selectTpl={ipValid:function(e){return MC.validate("cidr",e)?!0:Design.instance().component(e)?!0:!1},portValid:function(e){var n,r;if(!e||!e[0])return!1;e=e[0],n=t.getRuleValue(this);if((r=n.protocol)==="tcp"||r==="udp"||r==="all"){if(t.getPortRange(e))return!0}else if(t.getICMPRange(e))return!0;return!1},ipTipTpl:function(){return n.sgIPInputTip()}}},render:function(){var t,r,s,u,a,f,l,c,h,p;return p=this,t=o.getClass(e.RESTYPE.OSSG),i(this.$el,this.selectTpl,new t({view:this,model:p.sgModel})),u=[],s=[],h=p.sgModel.get("rules"),_.each(h,function(e){var t;t=p.getRuleStr(e);if(t.direction==="ingress")return u.push(t);if(t.direction==="egress")return s.push(t)}),f=this.sgModel.getMemberList(),a=_.map(f,function(e){return e.isEmbedded&&e.isEmbedded()&&(e=e.owner()),{name:e.get("name")}}),r=Design.instance().mode(),this.sgModel.get("appId")||(r="stack"),c=r==="appedit",l=r==="app",this.$el.html(n.stack({id:this.sgModel.get("appId"),name:this.sgModel.get("name"),description:this.sgModel.get("description"),defaultSG:this.sgModel.isDefault(),ingressRules:u,egressRules:s,memberList:a,modeIsAppEdit:c,modeIsApp:l})),_.delay(function(){return p.$el.find(".rule-item").each(function(){return p.initSGList($(this))})}),l||this.addNewItem(this.$el.find(".rule-list")),this.setTitle(this.sgModel.get("name")),this.updateCount(),this},nullStr:"N/A",initSGList:function(t){var n,r,i,s;r=Design.modelClassForType(e.RESTYPE.OSSG).allObjects(),i=_.map(r,function(e){return{text:e.get("name"),value:e.id}}),n=t.find('select.selection[data-target="ip"]'),s=n[0];if(s&&s.selectize)return s.selectize.addOption(i)},switchDirection:function(e){var t;return t=$(e.currentTarget),this.$el.find(".direction-switch .t-m-btn").removeClass("active"),t.addClass("active"),this.$el.find(".rule-container").addClass("hide"),t.hasClass("ingress")?this.$el.find(".rule-container.ingress").removeClass("hide"):this.$el.find(".rule-container.egress").removeClass("hide")},setTitle:function(e){return this.$("h1").text(e)},updateAttribute:function(e){var t,n,r,i,s,o,u;n=$(e.currentTarget),r=n.data("target"),u=n.getValue();if("protocol|port|ip".indexOf(r)>=0){s=this.getRuleValue(n);if(!s)return;r==="protocol"&&this.setDefaultPort(s,n),t=n.parents(".rule-item"),o=this.sgModel.getRule(t.data("id")),o?(s.appId="",o.set(s)):(s&&(i=this.sgModel.addRule(s)),this.addNewItem(t),t.data("id",i),this.updateCount(),this.listView.refreshList())}return r==="name"&&(this.sgModel.set("name",u),this.setTitle(u),this.listView.refreshList()),r==="description"&&this.sgModel.set("description",u),this.refreshDeleteState()},refreshDeleteState:function(){return this.$el.find(".rule-item").each(function(){return $(this).data("id")?$(this).find(".icon-delete").removeClass("hide"):$(this).find(".icon-delete").addClass("hide")})},addNewItem:function(e){var t,r;r=this;if(this.$el.find("input.os-sg-new-input").length<=1)return e.hasClass("rule-item")?t=$(n.sgNewInput()).insertAfter(e):t=$(n.sgNewInput()).appendTo(e)},removeRule:function(e){var t,n,r;n=$(e.currentTarget),t=n.parents(".rule-item"),r=t.data("id");if(r)return this.sgModel.removeRule(r),t.remove(),this.updateCount(),this.listView.refreshList()},setDefaultPort:function(e,t){var n,r,i;r=t.parents(".rule-item"),n=r.find('input[data-target="port"]'),n.removeAttr("disabled");if((i=e.protocol)==="tcp"||i==="udp")return n.val("1-65535");if(e.protocol==="icmp")return n.val("-1/-1");if(e.protocol===null)return n.val(this.nullStr),n.attr("disabled","disabled")},getPortStr:function(e,t){return e===null||t===null?"1-65535":e===t?e+"":e+"-"+t},getICMPStr:function(e,t){return e===null&&(e=-1),t===null&&(t=-1),e+"/"+t},getPortRange:function(e){var t;return e==="1-65535"?[null,null]:(t=MC.validate.portRange(e),t&&MC.validate.portValidRange(t)?t[0]===0?null:(t.length===1&&(t[1]=t[0]),t):null)},getICMPRange:function(e){var t,n,r;t=e.split("/");if(t&&t.length===2){r=Number(t[0]),n=Number(t[1]);if(!isNaN(r)&&!isNaN(n)&&_.isNumber(r)&&_.isNumber(n))return r<-1||r>255?null:n<-1||n>255?null:(r===-1&&(r=null),n===-1&&(n=null),t[0]=r,t[1]=n,t)}return null},getRuleValue:function(e){var t,n,r,i,s,o,u,a,f,l,c,h,p;s=e.parents(".rule-item"),i=s.parents(".rule-container"),r=s.find('select[data-target="protocol"]'),n=s.find('input[data-target="port"]'),t=s.find('select[data-target="ip"]'),c=r.getValue(),a=n.getValue(),u=t.getValue();if(u==="0.0.0.0/0"||!u)u=null;return h=null,p=Design.instance().component(u),p&&(h=p,u=null),o="ingress",i.hasClass("egress")&&(o="egress"),c==="all"?(c=null,l=null,f=null):c==="icmp"?(a=this.getICMPRange(a),a===null?(l=null,f=null):(l=a[0],f=a[1])):(a=this.getPortRange(a),a===null?(l=null,f=null):(l=a[0],f=a[1])),{direction:o,protocol:c,portMin:l,portMax:f,ip:u,sg:h}},getRuleStr:function(e){var t,n,r,i,s,o,u,a,f,l;return s=e.toJSON(),t=s.direction,n=s.remote_ip_prefix,i=s.protocol,n===null&&(n="0.0.0.0/0"),a=e.get("sg"),a&&(n=a.get("name"),u=a.id),(f=s.protocol)==="tcp"||f==="udp"?r=this.getPortStr(s.port_range_min,s.port_range_max):(l=s.protocol)==="icmp"?r=this.getICMPStr(s.port_range_min,s.port_range_max):(i="all",r=this.nullStr),o={id:e.id,direction:t,protocol:i,port:r,ip:n,sgId:u}},removeSG:function(e){var t;return t=this,s($(e.currentTarget),n.sgRemovePopup(),{".confirm":function(){return t.sgModel.remove(),t.listView.refreshList(),t.listView.hideFloatPanel()}})},updateCount:function(){var e,t;return t=this.sgModel.get("rules"),e=_.filter(t,function(e){return e.get("direction")==="ingress"}),this.$el.find(".sg-rule-count").text(t.length),this.$el.find(".sg-ingress-count").text(e.length),this.$el.find(".sg-egress-count").text(t.length-e.length),this.$el.find(".sg-member-count").text(this.sgModel.getMemberList().length)},focusNewInput:function(e){var t,r,i;return i=this,t=$(e.currentTarget),r=$(n.newItem()).insertAfter(t),r&&i.initSGList(r),_.delay(function(){return r.find('.selection[data-target="port"]').focus()}),t.remove()}},{handleTypes:["ossg"],handleModes:["stack","appedit","app"]})});